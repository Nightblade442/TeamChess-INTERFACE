{"ast":null,"code":"import { SET_IMPLICIT_GRANT_CREDENTIALS, SET_BOARD, SET_SELECTED, SET_AUTHENTICATION_STATUS, SET_PAGE, SET_AUTHENTICATION_CREDENTIALS, JOIN_GAME } from \"../constants/action-types\";\nimport * as moment from 'moment';\n\nfunction getMoves(board, pieceLocation, players) {\n  let piece = board[pieceLocation.x][pieceLocation.y];\n  let possibleMoves = []; //console.log(piece.owner);\n\n  let moveTemplate = {\n    pawn_w: [{\n      type: \"SINGLE\",\n      direction: {\n        x: 1,\n        y: 1\n      },\n      takeable: true,\n      onlyOnTake: true,\n      jumpable: false\n    }, {\n      type: \"SINGLE\",\n      direction: {\n        x: -1,\n        y: 1\n      },\n      takeable: true,\n      onlyOnTake: true,\n      jumpable: false\n    }, {\n      type: \"SINGLE\",\n      direction: {\n        x: 0,\n        y: 1\n      },\n      takeable: false,\n      onlyOnTake: false,\n      jumpable: false\n    }\n    /*{\r\n        type: \"CONTINUOUS\",\r\n        direction: {\r\n            x: -1,\r\n            y: 1\r\n        },\r\n        takeable: true,\r\n        jumpable: false,\r\n    }*/\n    ],\n    pawn_b: [{\n      type: \"SINGLE\",\n      direction: {\n        x: 1,\n        y: -1\n      },\n      takeable: true,\n      onlyOnTake: true,\n      jumpable: false\n    }, {\n      type: \"SINGLE\",\n      direction: {\n        x: -1,\n        y: -1\n      },\n      takeable: true,\n      onlyOnTake: true,\n      jumpable: false\n    }, {\n      type: \"SINGLE\",\n      direction: {\n        x: 0,\n        y: -1\n      },\n      takeable: false,\n      onlyOnTake: false,\n      jumpable: false\n    }],\n    rook_w: [{\n      type: \"CONTINUOUS\",\n      direction: {\n        x: 0,\n        y: 1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: 0,\n        y: -1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: 1,\n        y: 0\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: -1,\n        y: 0\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }],\n    bishop_w: [{\n      type: \"CONTINUOUS\",\n      direction: {\n        x: 1,\n        y: 1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: -1,\n        y: -1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: 1,\n        y: -1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: -1,\n        y: 1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }],\n    bishop_b: [{\n      type: \"CONTINUOUS\",\n      direction: {\n        x: 1,\n        y: 1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: -1,\n        y: -1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: 1,\n        y: -1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: -1,\n        y: 1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }],\n    rook_b: [{\n      type: \"CONTINUOUS\",\n      direction: {\n        x: 0,\n        y: 1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: 0,\n        y: -1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: 1,\n        y: 0\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: -1,\n        y: 0\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }],\n    knight_w: [{\n      type: \"SINGLE\",\n      direction: {\n        x: 1,\n        y: 2\n      },\n      takeable: true,\n      onlyOnTake: false,\n      jumpable: true\n    }, {\n      type: \"SINGLE\",\n      direction: {\n        x: -1,\n        y: 2\n      },\n      takeable: true,\n      onlyOnTake: false,\n      jumpable: true\n    }, {\n      type: \"SINGLE\",\n      direction: {\n        x: 1,\n        y: -2\n      },\n      takeable: true,\n      onlyOnTake: false,\n      jumpable: true\n    }, {\n      type: \"SINGLE\",\n      direction: {\n        x: -1,\n        y: -2\n      },\n      takeable: true,\n      onlyOnTake: false,\n      jumpable: true\n    }, {\n      type: \"SINGLE\",\n      direction: {\n        x: 2,\n        y: 1\n      },\n      takeable: true,\n      onlyOnTake: false,\n      jumpable: true\n    }, {\n      type: \"SINGLE\",\n      direction: {\n        x: 2,\n        y: -1\n      },\n      takeable: true,\n      onlyOnTake: false,\n      jumpable: true\n    }, {\n      type: \"SINGLE\",\n      direction: {\n        x: -2,\n        y: 1\n      },\n      takeable: true,\n      onlyOnTake: false,\n      jumpable: true\n    }, {\n      type: \"SINGLE\",\n      direction: {\n        x: -2,\n        y: -1\n      },\n      takeable: true,\n      onlyOnTake: false,\n      jumpable: true\n    }],\n    queen_w: [{\n      type: \"CONTINUOUS\",\n      direction: {\n        x: 1,\n        y: 1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: -1,\n        y: -1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: 1,\n        y: -1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: -1,\n        y: 1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: 0,\n        y: 1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: 0,\n        y: -1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: 1,\n        y: 0\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"CONTINUOUS\",\n      direction: {\n        x: -1,\n        y: 0\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }],\n    king_w: [{\n      type: \"SINGLE\",\n      direction: {\n        x: 1,\n        y: 1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"SINGLE\",\n      direction: {\n        x: -1,\n        y: -1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"SINGLE\",\n      direction: {\n        x: 1,\n        y: -1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"SINGLE\",\n      direction: {\n        x: -1,\n        y: 1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"SINGLE\",\n      direction: {\n        x: 0,\n        y: 1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"SINGLE\",\n      direction: {\n        x: 0,\n        y: -1\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"SINGLE\",\n      direction: {\n        x: 1,\n        y: 0\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }, {\n      type: \"SINGLE\",\n      direction: {\n        x: -1,\n        y: 0\n      },\n      onlyOnTake: false,\n      takeable: true,\n      jumpable: false\n    }]\n  };\n\n  if (moveTemplate[piece.type] !== undefined) {\n    //console.log(\"this piece's moves are defined\");\n    let pieceTemplate = moveTemplate[piece.type];\n    pieceTemplate.forEach(moveSet => {\n      //console.log(moveSet);\n      if (moveSet.type === \"SINGLE\") {\n        try {\n          let moveLocation = {\n            x: pieceLocation.x + moveSet.direction.x,\n            y: pieceLocation.y + moveSet.direction.y\n          };\n          let moveSquare = board[moveLocation.x][moveLocation.y];\n\n          if (moveSquare.type === null) {\n            if (!moveSet.onlyOnTake) {\n              possibleMoves.push(moveLocation);\n            }\n          } else {\n            //need to check if the piece on the target square is takeable\n            let piece1Colour = piece.type.split(\"_\")[1];\n            let piece2Colour = moveSquare.type.split(\"_\")[1];\n\n            if (piece1Colour !== piece2Colour) {\n              if (moveSet.takeable) {\n                possibleMoves.push(moveLocation);\n              }\n            }\n          }\n        } catch (error) {// console.log(error);\n          // console.log(\"move outside board boundaries\")\n        }\n      } else {\n        //console.log(\"here at least\");\n        let attempt = 1;\n\n        while (true) {\n          let moveLocation = {\n            x: pieceLocation.x + moveSet.direction.x * attempt,\n            y: pieceLocation.y + moveSet.direction.y * attempt\n          };\n\n          try {\n            let moveSquare = board[moveLocation.x][moveLocation.y];\n\n            if (moveSquare.type === null) {\n              possibleMoves.push(moveLocation);\n            } else {\n              //need to check if the piece on the target square is takeable\n              //console.log(moveSquare.type);\n              let piece1Colour = piece.type.split(\"_\")[1];\n              let piece2Colour = moveSquare.type.split(\"_\")[1];\n\n              if (piece1Colour !== piece2Colour) {\n                if (moveSet.takeable) {\n                  possibleMoves.push(moveLocation);\n                }\n\n                if (!moveSet.jumpable) {\n                  console.log(\"end of row\");\n                  break;\n                }\n              } else {\n                break;\n              }\n            }\n          } catch {\n            //console.log(\"Square Outside Boundaries of the board\");\n            break;\n          }\n\n          attempt++;\n        }\n      }\n    });\n  }\n\n  return possibleMoves;\n}\n\nfunction appReducer(state, action) {\n  //tell redux how to deal with data in each action case. one for each action.\n  let newstate = null;\n\n  if (action.type === SET_IMPLICIT_GRANT_CREDENTIALS) {\n    //after getting access token \n    newstate = { ...state,\n      loggedIn: true,\n      loginErrorMessage: null,\n      access_token: action.payload.access_token,\n      implicitGrantExpiry: moment().add(86398, 'seconds')\n    };\n  } else if (action.type === SET_BOARD) {\n    newstate = { ...state,\n      ...action.payload\n    };\n  } else if (action.type === SET_SELECTED) {\n    let highlightedSquares = [];\n\n    try {\n      if (state.board[action.payload.selected.x][action.payload.selected.y].type !== null) {\n        console.log(\"this is a piece\");\n        highlightedSquares = getMoves(state.board, action.payload.selected);\n      }\n    } catch {}\n\n    newstate = { ...state,\n      selectedSquare: action.payload.selected,\n      highlightedSquares: highlightedSquares\n    };\n  } else if (action.type === SET_AUTHENTICATION_STATUS) {\n    newstate = { ...state,\n      ...action.payload\n    };\n  } else if (action.type === SET_PAGE) {\n    newstate = { ...state,\n      ...action.payload\n    };\n  } else if (action.type === SET_AUTHENTICATION_CREDENTIALS) {\n    newstate = { ...state,\n      loggedIn: true,\n      page: \"MAIN\",\n      token: action.payload.token,\n      username: action.payload.username\n    };\n  } else if (action.type === JOIN_GAME) {\n    newstate = { ...state,\n      gameId: action.payload.gameId,\n      playerId: action.payload.playerId,\n      updater: action.payload.updater\n    };\n  } else {\n    newstate = { ...state\n    };\n  }\n\n  return newstate;\n}\n\nexport default appReducer;","map":{"version":3,"sources":["C:/Users/Jack.JACKLAPTOP/Documents/Long Chess/React Version/src/Redux/reducers/reducer.js"],"names":["SET_IMPLICIT_GRANT_CREDENTIALS","SET_BOARD","SET_SELECTED","SET_AUTHENTICATION_STATUS","SET_PAGE","SET_AUTHENTICATION_CREDENTIALS","JOIN_GAME","moment","getMoves","board","pieceLocation","players","piece","x","y","possibleMoves","moveTemplate","pawn_w","type","direction","takeable","onlyOnTake","jumpable","pawn_b","rook_w","bishop_w","bishop_b","rook_b","knight_w","queen_w","king_w","undefined","pieceTemplate","forEach","moveSet","moveLocation","moveSquare","push","piece1Colour","split","piece2Colour","error","attempt","console","log","appReducer","state","action","newstate","loggedIn","loginErrorMessage","access_token","payload","implicitGrantExpiry","add","highlightedSquares","selected","selectedSquare","page","token","username","gameId","playerId","updater"],"mappings":"AAAA,SACIA,8BADJ,EAEIC,SAFJ,EAGIC,YAHJ,EAIIC,yBAJJ,EAKIC,QALJ,EAMIC,8BANJ,EAOIC,SAPJ,QAQO,2BARP;AASA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,aAAzB,EAAwCC,OAAxC,EAAiD;AAC7C,MAAIC,KAAK,GAAGH,KAAK,CAACC,aAAa,CAACG,CAAf,CAAL,CAAuBH,aAAa,CAACI,CAArC,CAAZ;AACA,MAAIC,aAAa,GAAG,EAApB,CAF6C,CAG7C;;AACA,MAAIC,YAAY,GAAG;AACfC,IAAAA,MAAM,EAAE,CACJ;AACIC,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIM,MAAAA,QAAQ,EAAE,IANd;AAOIC,MAAAA,UAAU,EAAE,IAPhB;AAQIC,MAAAA,QAAQ,EAAE;AARd,KADI,EAYJ;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CAAC,CADG;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIM,MAAAA,QAAQ,EAAE,IANd;AAOIC,MAAAA,UAAU,EAAE,IAPhB;AAQIC,MAAAA,QAAQ,EAAE;AARd,KAZI,EAsBJ;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIM,MAAAA,QAAQ,EAAE,KANd;AAOIC,MAAAA,UAAU,EAAE,KAPhB;AAQIC,MAAAA,QAAQ,EAAE;AARd;AAUA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCgB,KADO;AA2CfC,IAAAA,MAAM,EAAE,CACJ;AACIL,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIM,MAAAA,QAAQ,EAAE,IANd;AAOIC,MAAAA,UAAU,EAAE,IAPhB;AAQIC,MAAAA,QAAQ,EAAE;AARd,KADI,EAYJ;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CAAC,CADG;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIM,MAAAA,QAAQ,EAAE,IANd;AAOIC,MAAAA,UAAU,EAAE,IAPhB;AAQIC,MAAAA,QAAQ,EAAE;AARd,KAZI,EAsBJ;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIM,MAAAA,QAAQ,EAAE,KANd;AAOIC,MAAAA,UAAU,EAAE,KAPhB;AAQIC,MAAAA,QAAQ,EAAE;AARd,KAtBI,CA3CO;AA4EfE,IAAAA,MAAM,EAAE,CACJ;AACIN,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KADI,EAWJ;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KAXI,EAqBJ;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KArBI,EA+BJ;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CAAC,CADG;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KA/BI,CA5EO;AAsHfG,IAAAA,QAAQ,EAAE,CACN;AACIP,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KADM,EAWN;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CAAC,CADG;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KAXM,EAqBN;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KArBM,EA+BN;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CAAC,CADG;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KA/BM,CAtHK;AAgKfI,IAAAA,QAAQ,EAAE,CACN;AACIR,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KADM,EAWN;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CAAC,CADG;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KAXM,EAqBN;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KArBM,EA+BN;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CAAC,CADG;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KA/BM,CAhKK;AA0MfK,IAAAA,MAAM,EAAE,CACJ;AACIT,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KADI,EAWJ;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KAXI,EAqBJ;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KArBI,EA+BJ;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CAAC,CADG;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KA/BI,CA1MO;AAoPfM,IAAAA,QAAQ,EAAE,CACN;AACIV,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIM,MAAAA,QAAQ,EAAE,IANd;AAOIC,MAAAA,UAAU,EAAE,KAPhB;AAQIC,MAAAA,QAAQ,EAAE;AARd,KADM,EAWN;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CAAC,CADG;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIM,MAAAA,QAAQ,EAAE,IANd;AAOIC,MAAAA,UAAU,EAAE,KAPhB;AAQIC,MAAAA,QAAQ,EAAE;AARd,KAXM,EAqBN;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIM,MAAAA,QAAQ,EAAE,IANd;AAOIC,MAAAA,UAAU,EAAE,KAPhB;AAQIC,MAAAA,QAAQ,EAAE;AARd,KArBM,EA+BN;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CAAC,CADG;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIM,MAAAA,QAAQ,EAAE,IANd;AAOIC,MAAAA,UAAU,EAAE,KAPhB;AAQIC,MAAAA,QAAQ,EAAE;AARd,KA/BM,EAyCN;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIM,MAAAA,QAAQ,EAAE,IANd;AAOIC,MAAAA,UAAU,EAAE,KAPhB;AAQIC,MAAAA,QAAQ,EAAE;AARd,KAzCM,EAmDN;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIM,MAAAA,QAAQ,EAAE,IANd;AAOIC,MAAAA,UAAU,EAAE,KAPhB;AAQIC,MAAAA,QAAQ,EAAE;AARd,KAnDM,EA6DN;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CAAC,CADG;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIM,MAAAA,QAAQ,EAAE,IANd;AAOIC,MAAAA,UAAU,EAAE,KAPhB;AAQIC,MAAAA,QAAQ,EAAE;AARd,KA7DM,EAuEN;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CAAC,CADG;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIM,MAAAA,QAAQ,EAAE,IANd;AAOIC,MAAAA,UAAU,EAAE,KAPhB;AAQIC,MAAAA,QAAQ,EAAE;AARd,KAvEM,CApPK;AAsUfO,IAAAA,OAAO,EAAE,CACL;AACIX,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KADK,EAWL;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CAAC,CADG;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KAXK,EAqBL;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KArBK,EA+BL;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CAAC,CADG;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KA/BK,EAyCL;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KAzCK,EAmDL;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KAnDK,EA6DL;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KA7DK,EAuEL;AACIJ,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CAAC,CADG;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KAvEK,CAtUM;AAwZfQ,IAAAA,MAAM,EAAE,CACJ;AACIZ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KADI,EAWJ;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CAAC,CADG;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KAXI,EAqBJ;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KArBI,EA+BJ;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CAAC,CADG;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KA/BI,EAyCJ;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KAzCI,EAmDJ;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE,CAAC;AAFG,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KAnDI,EA6DJ;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KA7DI,EAuEJ;AACIJ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,CAAC,EAAE,CAAC,CADG;AAEPC,QAAAA,CAAC,EAAE;AAFI,OAFf;AAMIO,MAAAA,UAAU,EAAE,KANhB;AAOID,MAAAA,QAAQ,EAAE,IAPd;AAQIE,MAAAA,QAAQ,EAAE;AARd,KAvEI;AAxZO,GAAnB;;AA4eA,MAAIN,YAAY,CAACJ,KAAK,CAACM,IAAP,CAAZ,KAA6Ba,SAAjC,EAA4C;AACxC;AACA,QAAIC,aAAa,GAAGhB,YAAY,CAACJ,KAAK,CAACM,IAAP,CAAhC;AACAc,IAAAA,aAAa,CAACC,OAAd,CAAsBC,OAAO,IAAI;AAC7B;AACA,UAAIA,OAAO,CAAChB,IAAR,KAAiB,QAArB,EAA+B;AAC3B,YAAI;AACA,cAAIiB,YAAY,GAAG;AACftB,YAAAA,CAAC,EAAEH,aAAa,CAACG,CAAd,GAAkBqB,OAAO,CAACf,SAAR,CAAkBN,CADxB;AAEfC,YAAAA,CAAC,EAAEJ,aAAa,CAACI,CAAd,GAAkBoB,OAAO,CAACf,SAAR,CAAkBL;AAFxB,WAAnB;AAIA,cAAIsB,UAAU,GAAG3B,KAAK,CAAC0B,YAAY,CAACtB,CAAd,CAAL,CAAsBsB,YAAY,CAACrB,CAAnC,CAAjB;;AACA,cAAIsB,UAAU,CAAClB,IAAX,KAAoB,IAAxB,EAA8B;AAC1B,gBAAI,CAACgB,OAAO,CAACb,UAAb,EAAyB;AACrBN,cAAAA,aAAa,CAACsB,IAAd,CAAmBF,YAAnB;AACH;AACJ,WAJD,MAKK;AACD;AACA,gBAAIG,YAAY,GAAG1B,KAAK,CAACM,IAAN,CAAWqB,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAnB;AACA,gBAAIC,YAAY,GAAGJ,UAAU,CAAClB,IAAX,CAAgBqB,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAnB;;AACA,gBAAID,YAAY,KAAKE,YAArB,EAAmC;AAC/B,kBAAIN,OAAO,CAACd,QAAZ,EAAsB;AAClBL,gBAAAA,aAAa,CAACsB,IAAd,CAAmBF,YAAnB;AACH;AACJ;AACJ;AACJ,SArBD,CAsBA,OAAOM,KAAP,EAAc,CACX;AACA;AACF;AACJ,OA3BD,MA4BK;AACD;AACA,YAAIC,OAAO,GAAG,CAAd;;AACA,eAAO,IAAP,EAAa;AACT,cAAIP,YAAY,GAAG;AACftB,YAAAA,CAAC,EAAEH,aAAa,CAACG,CAAd,GAAmBqB,OAAO,CAACf,SAAR,CAAkBN,CAAlB,GAAsB6B,OAD7B;AAEf5B,YAAAA,CAAC,EAAEJ,aAAa,CAACI,CAAd,GAAmBoB,OAAO,CAACf,SAAR,CAAkBL,CAAlB,GAAsB4B;AAF7B,WAAnB;;AAIA,cAAI;AACA,gBAAIN,UAAU,GAAG3B,KAAK,CAAC0B,YAAY,CAACtB,CAAd,CAAL,CAAsBsB,YAAY,CAACrB,CAAnC,CAAjB;;AACA,gBAAIsB,UAAU,CAAClB,IAAX,KAAoB,IAAxB,EAA8B;AAC1BH,cAAAA,aAAa,CAACsB,IAAd,CAAmBF,YAAnB;AACH,aAFD,MAGK;AACD;AACA;AACA,kBAAIG,YAAY,GAAG1B,KAAK,CAACM,IAAN,CAAWqB,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAnB;AACA,kBAAIC,YAAY,GAAGJ,UAAU,CAAClB,IAAX,CAAgBqB,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAnB;;AACA,kBAAID,YAAY,KAAKE,YAArB,EAAmC;AAC/B,oBAAIN,OAAO,CAACd,QAAZ,EAAsB;AAClBL,kBAAAA,aAAa,CAACsB,IAAd,CAAmBF,YAAnB;AACH;;AACD,oBAAI,CAACD,OAAO,CAACZ,QAAb,EAAuB;AACnBqB,kBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA;AACH;AACJ,eARD,MASI;AACA;AACH;AACJ;AACJ,WAvBD,CAwBA,MAAM;AACF;AACA;AACH;;AACDF,UAAAA,OAAO;AACV;AACJ;AACJ,KArED;AAsEH;;AACD,SAAO3B,aAAP;AACH;;AAED,SAAS8B,UAAT,CAAoBC,KAApB,EAA2BC,MAA3B,EAAmC;AAC/B;AACA,MAAIC,QAAQ,GAAG,IAAf;;AACA,MAAID,MAAM,CAAC7B,IAAP,KAAgBlB,8BAApB,EAAoD;AAAE;AAClDgD,IAAAA,QAAQ,GAAG,EACP,GAAGF,KADI;AAEPG,MAAAA,QAAQ,EAAE,IAFH;AAGPC,MAAAA,iBAAiB,EAAE,IAHZ;AAIPC,MAAAA,YAAY,EAAEJ,MAAM,CAACK,OAAP,CAAeD,YAJtB;AAKPE,MAAAA,mBAAmB,EAAE9C,MAAM,GAAG+C,GAAT,CAAa,KAAb,EAAoB,SAApB;AALd,KAAX;AAOH,GARD,MASK,IAAIP,MAAM,CAAC7B,IAAP,KAAgBjB,SAApB,EAA+B;AAChC+C,IAAAA,QAAQ,GAAG,EACP,GAAGF,KADI;AAEP,SAAGC,MAAM,CAACK;AAFH,KAAX;AAIH,GALI,MAMA,IAAIL,MAAM,CAAC7B,IAAP,KAAgBhB,YAApB,EAAkC;AACnC,QAAIqD,kBAAkB,GAAG,EAAzB;;AACA,QAAG;AACC,UAAIT,KAAK,CAACrC,KAAN,CAAYsC,MAAM,CAACK,OAAP,CAAeI,QAAf,CAAwB3C,CAApC,EAAuCkC,MAAM,CAACK,OAAP,CAAeI,QAAf,CAAwB1C,CAA/D,EAAkEI,IAAlE,KAA2E,IAA/E,EAAqF;AACjFyB,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAW,QAAAA,kBAAkB,GAAG/C,QAAQ,CAACsC,KAAK,CAACrC,KAAP,EAAcsC,MAAM,CAACK,OAAP,CAAeI,QAA7B,CAA7B;AACH;AACJ,KALD,CAMA,MAAK,CAEJ;;AACDR,IAAAA,QAAQ,GAAG,EACP,GAAGF,KADI;AAEPW,MAAAA,cAAc,EAAEV,MAAM,CAACK,OAAP,CAAeI,QAFxB;AAGPD,MAAAA,kBAAkB,EAAEA;AAHb,KAAX;AAKH,GAhBI,MAiBA,IAAGR,MAAM,CAAC7B,IAAP,KAAgBf,yBAAnB,EAA6C;AAC7C6C,IAAAA,QAAQ,GAAG,EACP,GAAGF,KADI;AAEP,SAAGC,MAAM,CAACK;AAFH,KAAX;AAIJ,GALI,MAMA,IAAGL,MAAM,CAAC7B,IAAP,KAAgBd,QAAnB,EAA4B;AAC7B4C,IAAAA,QAAQ,GAAG,EACP,GAAGF,KADI;AAEP,SAAGC,MAAM,CAACK;AAFH,KAAX;AAIH,GALI,MAMA,IAAGL,MAAM,CAAC7B,IAAP,KAAgBb,8BAAnB,EAAkD;AACnD2C,IAAAA,QAAQ,GAAG,EACP,GAAGF,KADI;AAEPG,MAAAA,QAAQ,EAAG,IAFJ;AAGPS,MAAAA,IAAI,EAAE,MAHC;AAIPC,MAAAA,KAAK,EAAEZ,MAAM,CAACK,OAAP,CAAeO,KAJf;AAKPC,MAAAA,QAAQ,EAAEb,MAAM,CAACK,OAAP,CAAeQ;AALlB,KAAX;AAOH,GARI,MASA,IAAGb,MAAM,CAAC7B,IAAP,KAAgBZ,SAAnB,EAA6B;AAC9B0C,IAAAA,QAAQ,GAAG,EACP,GAAGF,KADI;AAEPe,MAAAA,MAAM,EAAGd,MAAM,CAACK,OAAP,CAAeS,MAFjB;AAGPC,MAAAA,QAAQ,EAAEf,MAAM,CAACK,OAAP,CAAeU,QAHlB;AAIPC,MAAAA,OAAO,EAAEhB,MAAM,CAACK,OAAP,CAAeW;AAJjB,KAAX;AAMH,GAPI,MAQA;AACDf,IAAAA,QAAQ,GAAG,EAAE,GAAGF;AAAL,KAAX;AACH;;AAED,SAAOE,QAAP;AACH;;AAED,eAAeH,UAAf","sourcesContent":["import {\r\n    SET_IMPLICIT_GRANT_CREDENTIALS,\r\n    SET_BOARD,\r\n    SET_SELECTED,\r\n    SET_AUTHENTICATION_STATUS,\r\n    SET_PAGE,\r\n    SET_AUTHENTICATION_CREDENTIALS,\r\n    JOIN_GAME\r\n} from \"../constants/action-types\";\r\nimport * as moment from 'moment';\r\n\r\nfunction getMoves(board, pieceLocation, players) {\r\n    let piece = board[pieceLocation.x][pieceLocation.y];\r\n    let possibleMoves = [];\r\n    //console.log(piece.owner);\r\n    let moveTemplate = {\r\n        pawn_w: [\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: 1,\r\n                    y: 1\r\n                },\r\n                takeable: true,\r\n                onlyOnTake: true,\r\n                jumpable: false\r\n\r\n            },\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: -1,\r\n                    y: 1\r\n                },\r\n                takeable: true,\r\n                onlyOnTake: true,\r\n                jumpable: false\r\n            },\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: 0,\r\n                    y: 1\r\n                },\r\n                takeable: false,\r\n                onlyOnTake: false,\r\n                jumpable: false\r\n            },\r\n            /*{\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: -1,\r\n                    y: 1\r\n                },\r\n                takeable: true,\r\n                jumpable: false,\r\n            }*/\r\n        ],\r\n        pawn_b: [\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: 1,\r\n                    y: -1\r\n                },\r\n                takeable: true,\r\n                onlyOnTake: true,\r\n                jumpable: false\r\n\r\n            },\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: -1,\r\n                    y: -1\r\n                },\r\n                takeable: true,\r\n                onlyOnTake: true,\r\n                jumpable: false\r\n            },\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: 0,\r\n                    y: -1\r\n                },\r\n                takeable: false,\r\n                onlyOnTake: false,\r\n                jumpable: false\r\n            }\r\n        ],\r\n        rook_w: [\r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: 0,\r\n                    y: 1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            }, \r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: 0,\r\n                    y: -1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: 1,\r\n                    y: 0\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: -1,\r\n                    y: 0\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n        ],\r\n        bishop_w: [\r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: 1,\r\n                    y: 1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            }, \r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: -1,\r\n                    y: -1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: 1,\r\n                    y: -1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: -1,\r\n                    y: 1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n        ],\r\n        bishop_b: [\r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: 1,\r\n                    y: 1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            }, \r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: -1,\r\n                    y: -1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: 1,\r\n                    y: -1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: -1,\r\n                    y: 1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n        ],\r\n        rook_b: [\r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: 0,\r\n                    y: 1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            }, \r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: 0,\r\n                    y: -1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: 1,\r\n                    y: 0\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: -1,\r\n                    y: 0\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n        ],\r\n        knight_w: [\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: 1,\r\n                    y: 2\r\n                },\r\n                takeable: true,\r\n                onlyOnTake: false,\r\n                jumpable: true\r\n            },\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: -1,\r\n                    y: 2\r\n                },\r\n                takeable: true,\r\n                onlyOnTake: false,\r\n                jumpable: true\r\n            },\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: 1,\r\n                    y: -2\r\n                },\r\n                takeable: true,\r\n                onlyOnTake: false,\r\n                jumpable: true\r\n            },\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: -1,\r\n                    y: -2\r\n                },\r\n                takeable: true,\r\n                onlyOnTake: false,\r\n                jumpable: true\r\n            },\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: 2,\r\n                    y: 1\r\n                },\r\n                takeable: true,\r\n                onlyOnTake: false,\r\n                jumpable: true\r\n            },\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: 2,\r\n                    y: -1\r\n                },\r\n                takeable: true,\r\n                onlyOnTake: false,\r\n                jumpable: true\r\n            },\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: -2,\r\n                    y: 1\r\n                },\r\n                takeable: true,\r\n                onlyOnTake: false,\r\n                jumpable: true\r\n            },\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: -2,\r\n                    y: -1\r\n                },\r\n                takeable: true,\r\n                onlyOnTake: false,\r\n                jumpable: true\r\n            },\r\n        ],\r\n        queen_w: [\r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: 1,\r\n                    y: 1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            }, \r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: -1,\r\n                    y: -1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: 1,\r\n                    y: -1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: -1,\r\n                    y: 1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },  \r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: 0,\r\n                    y: 1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            }, \r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: 0,\r\n                    y: -1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: 1,\r\n                    y: 0\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n            {\r\n                type: \"CONTINUOUS\",\r\n                direction: {\r\n                    x: -1,\r\n                    y: 0\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n        ],\r\n        king_w: [\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: 1,\r\n                    y: 1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            }, \r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: -1,\r\n                    y: -1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: 1,\r\n                    y: -1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: -1,\r\n                    y: 1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },  \r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: 0,\r\n                    y: 1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            }, \r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: 0,\r\n                    y: -1\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: 1,\r\n                    y: 0\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n            {\r\n                type: \"SINGLE\",\r\n                direction: {\r\n                    x: -1,\r\n                    y: 0\r\n                },\r\n                onlyOnTake: false,\r\n                takeable: true,\r\n                jumpable: false,\r\n            },\r\n        ]\r\n    }\r\n\r\n    if (moveTemplate[piece.type] !== undefined) {\r\n        //console.log(\"this piece's moves are defined\");\r\n        let pieceTemplate = moveTemplate[piece.type];\r\n        pieceTemplate.forEach(moveSet => {\r\n            //console.log(moveSet);\r\n            if (moveSet.type === \"SINGLE\") {\r\n                try {\r\n                    let moveLocation = {\r\n                        x: pieceLocation.x + moveSet.direction.x,\r\n                        y: pieceLocation.y + moveSet.direction.y\r\n                    }\r\n                    let moveSquare = board[moveLocation.x][moveLocation.y];\r\n                    if (moveSquare.type === null) {\r\n                        if (!moveSet.onlyOnTake) {\r\n                            possibleMoves.push(moveLocation);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //need to check if the piece on the target square is takeable\r\n                        let piece1Colour = piece.type.split(\"_\")[1];\r\n                        let piece2Colour = moveSquare.type.split(\"_\")[1];\r\n                        if (piece1Colour !== piece2Colour) {\r\n                            if (moveSet.takeable) {\r\n                                possibleMoves.push(moveLocation);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch (error) {\r\n                   // console.log(error);\r\n                   // console.log(\"move outside board boundaries\")\r\n                }\r\n            }\r\n            else {\r\n                //console.log(\"here at least\");\r\n                let attempt = 1;\r\n                while (true) {\r\n                    let moveLocation = {\r\n                        x: pieceLocation.x + (moveSet.direction.x * attempt),\r\n                        y: pieceLocation.y + (moveSet.direction.y * attempt)\r\n                    }\r\n                    try {\r\n                        let moveSquare = board[moveLocation.x][moveLocation.y];\r\n                        if (moveSquare.type === null) {\r\n                            possibleMoves.push(moveLocation);\r\n                        }\r\n                        else {\r\n                            //need to check if the piece on the target square is takeable\r\n                            //console.log(moveSquare.type);\r\n                            let piece1Colour = piece.type.split(\"_\")[1];\r\n                            let piece2Colour = moveSquare.type.split(\"_\")[1];\r\n                            if (piece1Colour !== piece2Colour) {\r\n                                if (moveSet.takeable) {\r\n                                    possibleMoves.push(moveLocation);\r\n                                }\r\n                                if (!moveSet.jumpable) {\r\n                                    console.log(\"end of row\");\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else{\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    catch {\r\n                        //console.log(\"Square Outside Boundaries of the board\");\r\n                        break;\r\n                    }\r\n                    attempt++;\r\n                }\r\n            }\r\n        })\r\n    }\r\n    return possibleMoves;\r\n}\r\n\r\nfunction appReducer(state, action) {\r\n    //tell redux how to deal with data in each action case. one for each action.\r\n    let newstate = null;\r\n    if (action.type === SET_IMPLICIT_GRANT_CREDENTIALS) { //after getting access token \r\n        newstate = {\r\n            ...state,\r\n            loggedIn: true,\r\n            loginErrorMessage: null,\r\n            access_token: action.payload.access_token,\r\n            implicitGrantExpiry: moment().add(86398, 'seconds'),\r\n        };\r\n    }\r\n    else if (action.type === SET_BOARD) {\r\n        newstate = {\r\n            ...state,\r\n            ...action.payload,\r\n        }\r\n    }\r\n    else if (action.type === SET_SELECTED) {\r\n        let highlightedSquares = [];\r\n        try{\r\n            if (state.board[action.payload.selected.x][action.payload.selected.y].type !== null) {\r\n                console.log(\"this is a piece\");\r\n                highlightedSquares = getMoves(state.board, action.payload.selected);\r\n            }\r\n        }\r\n        catch{\r\n\r\n        }\r\n        newstate = {\r\n            ...state,\r\n            selectedSquare: action.payload.selected,\r\n            highlightedSquares: highlightedSquares\r\n        }\r\n    }\r\n    else if(action.type === SET_AUTHENTICATION_STATUS){\r\n         newstate = {\r\n             ...state,\r\n             ...action.payload\r\n         }\r\n    }\r\n    else if(action.type === SET_PAGE){\r\n        newstate = {\r\n            ...state,\r\n            ...action.payload\r\n        }\r\n    }\r\n    else if(action.type === SET_AUTHENTICATION_CREDENTIALS){\r\n        newstate = {\r\n            ...state,\r\n            loggedIn : true,\r\n            page: \"MAIN\",\r\n            token: action.payload.token,\r\n            username: action.payload.username,\r\n        }\r\n    }\r\n    else if(action.type === JOIN_GAME){\r\n        newstate = {\r\n            ...state,\r\n            gameId : action.payload.gameId,\r\n            playerId: action.payload.playerId,\r\n            updater: action.payload.updater\r\n        }\r\n    }\r\n    else {\r\n        newstate = { ...state };\r\n    }\r\n\r\n    return newstate;\r\n}\r\n\r\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}