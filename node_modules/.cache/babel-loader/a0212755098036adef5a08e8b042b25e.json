{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jack.JACKLAPTOP\\\\Documents\\\\Long Chess\\\\React Version\\\\src\\\\Components\\\\JoinGame\\\\JoinGame.js\";\n//import logo from './logo.svg';\n//import './App.css';\nimport { Redirect } from 'react-router-dom';\nimport React, { Component, useState, useEffect, useRef } from 'react';\nimport store from \"../../Redux/store\";\nimport { connect } from \"react-redux\";\nimport { setImplicitGrantCredentials, setGameCredentials } from \"../../Redux/actions/action\";\nimport styles from './JoinGame.module.css';\nimport createGame from '../../API/createGame';\nimport joinGame from '../../API/joinGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    app: state\n  };\n};\n\nconst mapDispatchToProps = state => {\n  return {\n    setImplicitGrantCredentials: props => store.dispatch(setImplicitGrantCredentials(props)),\n    joinGame: props => store.dispatch(setGameCredentials(props)) //setQueues: props => store.dispatch(setQueues(props))\n    //  setUsers: props => store.dispatch(setUsers(props))\n\n  };\n};\n\nclass JoinGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameId: \"Game ID:\",\n      preference: \"WHITE\"\n    }; // this.resize = this.resize.bind(this);\n\n    this.handleIdChange = this.handleIdChange.bind(this);\n    this.handleJoinGame = this.handleJoinGame.bind(this);\n    this.changePreference = this.changePreference.bind(this);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    let slider = null;\n\n    if (this.state.preference === \"WHITE\") {\n      slider = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.SliderBackgroundWHITE,\n        onClick: this.changePreference,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.SliderWHITE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    } else {\n      slider = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.SliderBackgroundBLACK,\n        onClick: this.changePreference,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.SliderBLACK\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.CreateGameContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Number of Boards: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"game ID\",\n        onChange: this.handleIdChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.JoinGameButton,\n        onClick: this.handleJoinGame,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), slider]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleIdChange(event) {\n    console.log(event);\n    this.setState({ ...this.state,\n      gameId: event.target.value\n    });\n  }\n\n  handleJoinGame(event) {\n    console.log(\"Joining Game\");\n    let params = {\n      token: this.props.app.token,\n      username: this.props.app.username,\n      gameId: this.state.gameId,\n      preference: this.state.preference\n    };\n    console.log(params);\n    let state = this.props.app;\n    joinGame(params).then(response => {\n      console.log(response);\n      this.props.joinGame({\n        gameId: this.state.gameId,\n        playerId: response.playerId\n      });\n    }).catch(error => {\n      console.log(error);\n    }); //need to join the game then set state\n  }\n\n  changePreference(event) {\n    console.log(this.state.preference);\n\n    if (this.state.preference === \"WHITE\") {\n      this.setState({ ...this.state,\n        preference: \"BLACK\"\n      });\n    } else {\n      this.setState({ ...this.state,\n        preference: \"WHITE\"\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinGame);","map":{"version":3,"sources":["C:/Users/Jack.JACKLAPTOP/Documents/Long Chess/React Version/src/Components/JoinGame/JoinGame.js"],"names":["Redirect","React","Component","useState","useEffect","useRef","store","connect","setImplicitGrantCredentials","setGameCredentials","styles","createGame","joinGame","mapStateToProps","state","app","mapDispatchToProps","props","dispatch","JoinGame","constructor","gameId","preference","handleIdChange","bind","handleJoinGame","changePreference","componentDidMount","render","slider","SliderBackgroundWHITE","SliderWHITE","SliderBackgroundBLACK","SliderBLACK","CreateGameContainer","JoinGameButton","event","console","log","setState","target","value","params","token","username","then","response","playerId","catch","error"],"mappings":"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","sourcesContent":["//import logo from './logo.svg';\r\n//import './App.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport React, { Component, useState, useEffect, useRef } from 'react';\r\nimport store from \"../../Redux/store\";\r\nimport { connect } from \"react-redux\";\r\nimport { setImplicitGrantCredentials, setGameCredentials } from \"../../Redux/actions/action\";\r\n\r\n\r\nimport styles from './JoinGame.module.css'\r\n\r\nimport createGame from '../../API/createGame';\r\nimport joinGame from '../../API/joinGame';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        app: state,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = state => {\r\n    return {\r\n        setImplicitGrantCredentials: props => store.dispatch(setImplicitGrantCredentials(props)),\r\n        joinGame: props => store.dispatch(setGameCredentials(props)),\r\n        //setQueues: props => store.dispatch(setQueues(props))\r\n        //  setUsers: props => store.dispatch(setUsers(props))\r\n    };\r\n};\r\n\r\nclass JoinGame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            gameId: \"Game ID:\",\r\n            preference: \"WHITE\"\r\n        }\r\n        // this.resize = this.resize.bind(this);\r\n       this.handleIdChange = this.handleIdChange.bind(this);\r\n        this.handleJoinGame = this.handleJoinGame.bind(this);\r\n        this.changePreference = this.changePreference.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        let slider = null;\r\n        if(this.state.preference === \"WHITE\"){\r\n            slider = (\r\n                <div className={styles.SliderBackgroundWHITE} onClick={this.changePreference}>\r\n                    <div className={styles.SliderWHITE}></div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n                slider = (\r\n                    <div className={styles.SliderBackgroundBLACK} onClick={this.changePreference}>\r\n                        <div className={styles.SliderBLACK}></div>\r\n                    </div>\r\n                )\r\n        }\r\n\r\n        return (\r\n            <div className={styles.CreateGameContainer}>\r\n                <h4>Number of Boards: </h4>\r\n                <input type=\"text\"placeholder=\"game ID\" onChange={this.handleIdChange}></input>\r\n                <button className={styles.JoinGameButton} onClick={this.handleJoinGame}>Join</button>\r\n                {slider}\r\n                </div>\r\n        )\r\n    }\r\n\r\n    handleIdChange(event){\r\n        console.log(event);\r\n        this.setState({\r\n            ...this.state,\r\n            gameId : event.target.value\r\n        })\r\n    }\r\n\r\n    handleJoinGame(event){\r\n        console.log(\"Joining Game\");\r\n        let params = {\r\n            token: this.props.app.token,\r\n            username: this.props.app.username,\r\n            gameId: this.state.gameId,   \r\n            preference: this.state.preference\r\n        }\r\n        console.log(params);\r\n        let state = this.props.app;\r\n        joinGame(params)\r\n        .then(response => {\r\n            console.log(response);\r\n            this.props.joinGame({\r\n                gameId: this.state.gameId,\r\n                playerId: response.playerId,\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n        //need to join the game then set state\r\n    }\r\n    \r\n    changePreference(event){\r\n        console.log(this.state.preference);\r\n        if(this.state.preference === \"WHITE\"){\r\n            this.setState({\r\n                ...this.state,\r\n                preference: \"BLACK\"\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                ...this.state,\r\n                preference: \"WHITE\"\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinGame);\r\n"]},"metadata":{},"sourceType":"module"}