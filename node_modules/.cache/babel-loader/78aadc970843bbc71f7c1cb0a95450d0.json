{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jack\\\\OneDrive\\\\Documents\\\\Long Chess\\\\React Version\\\\src\\\\Components\\\\Piece\\\\Piece.js\";\nimport { Redirect } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport store from \"../../Redux/store\";\nimport { connect } from \"react-redux\";\nimport { setImplicitGrantCredentials, setBoard, setSelected } from \"../../Redux/actions/action\";\nimport styles from './Piece.module.css';\nimport pawn_w from '../Images/pawn_w.png';\nimport pawn_b from '../Images/pawn_b.png';\nimport { SET_IMPLICIT_GRANT_CREDENTIALS } from '../../Redux/constants/action-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = {\n  pawn_w: pawn_w,\n  pawn_b: pawn_b\n};\n\nconst mapStateToProps = state => {\n  return {\n    app: state\n  };\n};\n\nconst mapDispatchToProps = state => {\n  return {\n    setImplicitGrantCredentials: props => store.dispatch(setImplicitGrantCredentials(props)),\n    setBoard: props => store.dispatch(setBoard(props)),\n    setSelected: props => store.dispatch(setSelected(props)) //setQueues: props => store.dispatch(setQueues(props))\n    //  setUsers: props => store.dispatch(setUsers(props))\n\n  };\n};\n\nclass Piece extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    let html = null;\n\n    if (this.props.params !== undefined) {\n      let image = null;\n      let style = {\n        width: this.props.params.squareSize + 'px',\n        height: this.props.params.squareSize + 'px'\n      };\n\n      if (this.props.params.type !== null) {\n        image = /*#__PURE__*/_jsxDEV(\"img\", {\n          src: images[this.props.params.type],\n          width: this.props.params.squareSize,\n          width: this.props.params.squareSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this);\n      }\n\n      if (this.props.params.colour === \"WHITE\") {\n        html = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Square_WHITE,\n          style: style,\n          onClick: this.handleClick,\n          children: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this);\n      } else {\n        html = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Square_BLACK,\n          style: style,\n          onClick: this.handleClick,\n          children: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this);\n      }\n\n      if (this.props.app.highlightedSquares.length !== 0) {\n        this.props.app.highlightedSquares.forEach(square => {\n          if (square.x === this.props.params.location.x && square.y === this.props.params.location.y) {\n            html = /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.Square_HIGHLIGHTED,\n              style: style,\n              onClick: this.handleClick,\n              children: image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this);\n          }\n        });\n      }\n\n      if (this.props.app.selectedSquare.x === this.props.params.location.x && this.props.app.selectedSquare.y === this.props.params.location.y) {\n        html = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Square_SELECTED,\n          style: style,\n          onClick: this.handleClick,\n          children: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this);\n      }\n    } else {\n      html = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Square_BLACK\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this);\n    }\n\n    return html;\n  }\n\n  handleClick() {\n    if (this.props.app.selectedSquare.x === this.props.params.location.x && this.props.app.selectedSquare.y === this.props.params.location.y) {\n      console.log(\"This piece is seleceted\");\n      let location = {\n        x: null,\n        y: null\n      };\n      this.props.setSelected({\n        selected: location\n      });\n    } else {\n      let isHighlighted = false;\n      this.props.app.highlightedSquares.forEach(square => {\n        if (square.x === this.props.params.location.x && square.y === this.props.params.location.y) {\n          //have to implement move piece here code.\n          let board = this.props.app.board;\n          let pieceLocation = this.props.app.selectedSquare;\n          let piece = board[pieceLocation.x][pieceLocation.y];\n          board[pieceLocation.x][pieceLocation.y] = {\n            type: null,\n            location: pieceLocation\n          };\n          board[square.x][square.y] = piece;\n          isHighlighted = true;\n          this.props.setBoard({\n            board: board\n          });\n        }\n      });\n\n      if (!isHighlighted) {\n        this.props.setSelected({\n          selected: this.props.params.location\n        });\n\n        if (this.props.params.type !== null) {\n          console.log(\"This is a piece...\");\n        } else {\n          console.log(\"This is not a piece\");\n        }\n      }\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Piece);","map":{"version":3,"sources":["C:/Users/Jack/OneDrive/Documents/Long Chess/React Version/src/Components/Piece/Piece.js"],"names":["Redirect","React","Component","store","connect","setImplicitGrantCredentials","setBoard","setSelected","styles","pawn_w","pawn_b","SET_IMPLICIT_GRANT_CREDENTIALS","images","mapStateToProps","state","app","mapDispatchToProps","props","dispatch","Piece","constructor","handleClick","bind","componentDidMount","render","html","params","undefined","image","style","width","squareSize","height","type","colour","Square_WHITE","Square_BLACK","highlightedSquares","length","forEach","square","x","location","y","Square_HIGHLIGHTED","selectedSquare","Square_SELECTED","console","log","selected","isHighlighted","board","pieceLocation","piece"],"mappings":"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","sourcesContent":["\r\nimport { Redirect } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport store from \"../../Redux/store\";\r\nimport { connect } from \"react-redux\";\r\nimport { setImplicitGrantCredentials, setBoard, setSelected } from \"../../Redux/actions/action\";\r\n\r\n\r\nimport styles from './Piece.module.css';\r\n\r\nimport pawn_w from '../Images/pawn_w.png';\r\nimport pawn_b from '../Images/pawn_b.png';\r\nimport { SET_IMPLICIT_GRANT_CREDENTIALS } from '../../Redux/constants/action-types';\r\n\r\nconst images = {\r\n    pawn_w: pawn_w,\r\n    pawn_b: pawn_b\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        app: state,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = state => {\r\n    return {\r\n        setImplicitGrantCredentials: props => store.dispatch(setImplicitGrantCredentials(props)),\r\n        setBoard: props => store.dispatch(setBoard(props)),\r\n        setSelected: props => store.dispatch(setSelected(props)),\r\n        //setQueues: props => store.dispatch(setQueues(props))\r\n        //  setUsers: props => store.dispatch(setUsers(props))\r\n    };\r\n};\r\n\r\nclass Piece extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        let html = null;\r\n        if (this.props.params !== undefined) {\r\n            let image = null;\r\n            let style = {\r\n                width: this.props.params.squareSize + 'px',\r\n                height: this.props.params.squareSize + 'px'\r\n            }\r\n            if (this.props.params.type !== null) {\r\n                image = (\r\n                    <img src={images[this.props.params.type]} width={this.props.params.squareSize} width={this.props.params.squareSize}></img>\r\n                )\r\n            }\r\n            if (this.props.params.colour === \"WHITE\") {\r\n                html = (\r\n                    <div className={styles.Square_WHITE} style={style} onClick={this.handleClick}>\r\n                        {image}\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                html = (\r\n                    <div className={styles.Square_BLACK} style={style} onClick={this.handleClick}>\r\n                        {image}\r\n                    </div>\r\n                )\r\n            }\r\n            if(this.props.app.highlightedSquares.length !== 0){\r\n                this.props.app.highlightedSquares.forEach(square => {\r\n                    if((square.x ===this.props.params.location.x) && (square.y === this.props.params.location.y)){\r\n                        html = (\r\n                            <div className={styles.Square_HIGHLIGHTED} style={style} onClick={this.handleClick}>\r\n                                {image}\r\n                            </div>\r\n                        )\r\n                    }\r\n                })\r\n            }\r\n            \r\n            if ((this.props.app.selectedSquare.x === this.props.params.location.x) && (this.props.app.selectedSquare.y === this.props.params.location.y)) {\r\n                html = (\r\n                    <div className={styles.Square_SELECTED} style={style} onClick={this.handleClick}>\r\n                        {image}\r\n                    </div>\r\n                )\r\n            }\r\n\r\n        }\r\n        else {\r\n            html = (\r\n                <div className={styles.Square_BLACK}>\r\n\r\n                </div>\r\n            )\r\n        }\r\n        return html;\r\n    }\r\n\r\n    handleClick() {\r\n        if ((this.props.app.selectedSquare.x === this.props.params.location.x) && (this.props.app.selectedSquare.y === this.props.params.location.y)) {\r\n            console.log(\"This piece is seleceted\");\r\n            let location = {\r\n                x: null,\r\n                y: null\r\n            }\r\n            this.props.setSelected({selected : location});\r\n        } else {\r\n            \r\n            let isHighlighted = false;\r\n            this.props.app.highlightedSquares.forEach(square => {\r\n                if((square.x ===this.props.params.location.x) && (square.y === this.props.params.location.y)){\r\n                   //have to implement move piece here code.\r\n                   let board = this.props.app.board;\r\n                   let pieceLocation = this.props.app.selectedSquare;\r\n                   let piece = board[pieceLocation.x][pieceLocation.y];\r\n                   board[pieceLocation.x][pieceLocation.y] = {\r\n                       type: null,\r\n                       location: pieceLocation\r\n                   }\r\n                   board[square.x][square.y] = piece;\r\n                   isHighlighted = true;\r\n                   this.props.setBoard({board : board});\r\n                }\r\n            })\r\n            if(!isHighlighted){\r\n                this.props.setSelected({ selected: this.props.params.location })\r\n                if (this.props.params.type !== null) {\r\n                    console.log(\"This is a piece...\");\r\n\r\n                }\r\n                else {\r\n                    console.log(\"This is not a piece\");\r\n                }\r\n            }            \r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Piece);\r\n\r\n"]},"metadata":{},"sourceType":"module"}