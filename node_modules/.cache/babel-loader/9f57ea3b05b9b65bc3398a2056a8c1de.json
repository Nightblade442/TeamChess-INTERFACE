{"ast":null,"code":"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\"; //import './App.css';\n//import WrenAppBar from '../wrenAppBar/WrenAppBar';\n\nimport queryString from 'query-string';\nimport store from \"../../Redux/store\";\nimport { setImplicitGrantCredentials } from \"../../Redux/actions/action\"; //import * as DEBUG from 'debug';\n//const debug = new console.log(\"Wren:ImplicitGrant\");\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nconst mapDispatchToProps = state => {\n  return {\n    setImplicitGrantCredentials: props => store.dispatch(setImplicitGrantCredentials(props))\n  };\n};\n\nclass Callback extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"Constructor  props:%O\", this.props);\n  }\n\n  componentDidMount() {\n    console.log(\"DidMount  props: %O\", this.props);\n    const values = queryString.parse(this.props.location.hash);\n    console.log(\"Parsed Query String\", values);\n    this.props.store.setImplicitGrantCredentials(values);\n  }\n\n  render() {\n    console.log(\"Render  props: %O\", this.props);\n    let html = null;\n\n    if (this.props.store.app.implicitGrant.haveToken) {\n      /*  html =\r\n        (\r\n          <Redirect to=\"/\" />\r\n        )*/\n    } else {\n      /* html =\r\n       (\r\n         <div className=\"App\">\r\n           <WrenAppBar title={this.props.store.app.name}  isFetching={false} version={this.props.store.app.version}/>\r\n         </div>\r\n       )*/\n    }\n\n    return html;\n  }\n\n}\n\nexport default Callback = connect(mapStateToProps, mapDispatchToProps)(Callback);","map":{"version":3,"sources":["C:/Users/Jack/OneDrive/Documents/WrenData2021/ReserveAgents/reservation-client/src/Components/Authorization/implicitGrant.js"],"names":["React","Component","Redirect","connect","queryString","store","setImplicitGrantCredentials","mapStateToProps","state","mapDispatchToProps","props","dispatch","Callback","constructor","console","log","componentDidMount","values","parse","location","hash","render","html","app","implicitGrant","haveToken"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;;AAEA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,SAASC,2BAAT,QAA4C,4BAA5C,C,CAEA;AACA;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAOA,KAAP;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAGD,KAAK,IAAI;AAClC,SAAO;AACLF,IAAAA,2BAA2B,EAAGI,KAAK,IAAIL,KAAK,CAACM,QAAN,CAAeL,2BAA2B,CAACI,KAAD,CAA1C;AADlC,GAAP;AAGD,CAJD;;AAMA,MAAME,QAAN,SAAuBX,SAAvB,CAAiC;AAC/BY,EAAAA,WAAW,CAACH,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,KAAKL,KAA1C;AACD;;AAEDM,EAAAA,iBAAiB,GAAE;AACjBF,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,KAAKL,KAAxC;AACA,UAAMO,MAAM,GAAGb,WAAW,CAACc,KAAZ,CAAkB,KAAKR,KAAL,CAAWS,QAAX,CAAoBC,IAAtC,CAAf;AAEAN,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,MAAnC;AACA,SAAKP,KAAL,CAAWL,KAAX,CAAiBC,2BAAjB,CAA6CW,MAA7C;AAED;;AAEDI,EAAAA,MAAM,GAAG;AACPP,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKL,KAAtC;AAEA,QAAIY,IAAI,GAAG,IAAX;;AACA,QAAG,KAAKZ,KAAL,CAAWL,KAAX,CAAiBkB,GAAjB,CAAqBC,aAArB,CAAmCC,SAAtC,EAAgD;AAChD;AACJ;AACA;AACA;AACK,KALD,MAMI;AACH;AACL;AACA;AACA;AACA;AACA;AACK;;AAED,WAASH,IAAT;AACD;;AAnC8B;;AAsCjC,eAAeV,QAAQ,GAAGT,OAAO,CAACI,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CG,QAA7C,CAA1B","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n//import './App.css';\r\n//import WrenAppBar from '../wrenAppBar/WrenAppBar';\r\n\r\nimport queryString from 'query-string'\r\n\r\nimport store from \"../../Redux/store\";\r\n\r\nimport { setImplicitGrantCredentials } from \"../../Redux/actions/action\";\r\n\r\n//import * as DEBUG from 'debug';\r\n//const debug = new console.log(\"Wren:ImplicitGrant\");\r\n\r\nconst mapStateToProps = state => {\r\n  return state;\r\n};\r\n\r\nconst mapDispatchToProps = state => {\r\n  return {\r\n    setImplicitGrantCredentials : props => store.dispatch(setImplicitGrantCredentials(props))\r\n  };\r\n};\r\n\r\nclass Callback extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"Constructor  props:%O\", this.props);\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(\"DidMount  props: %O\", this.props);\r\n    const values = queryString.parse(this.props.location.hash);\r\n\r\n    console.log(\"Parsed Query String\", values);\r\n    this.props.store.setImplicitGrantCredentials(values);\r\n\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Render  props: %O\", this.props);\r\n\r\n    let html = null;\r\n    if(this.props.store.app.implicitGrant.haveToken){\r\n    /*  html =\r\n      (\r\n        <Redirect to=\"/\" />\r\n      )*/\r\n    }\r\n    else{\r\n     /* html =\r\n      (\r\n        <div className=\"App\">\r\n          <WrenAppBar title={this.props.store.app.name}  isFetching={false} version={this.props.store.app.version}/>\r\n        </div>\r\n      )*/\r\n    }\r\n\r\n    return ( html );\r\n  }\r\n}\r\n\r\nexport default Callback = connect(mapStateToProps, mapDispatchToProps)(Callback);\r\n"]},"metadata":{},"sourceType":"module"}