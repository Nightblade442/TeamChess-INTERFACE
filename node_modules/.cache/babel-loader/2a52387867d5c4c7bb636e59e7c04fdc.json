{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jack.JACKLAPTOP\\\\Documents\\\\Long Chess\\\\React Version\\\\src\\\\Components\\\\ToolBar\\\\ToolBar.js\";\n//import logo from './logo.svg';\n//import './App.css';\nimport { Redirect } from 'react-router-dom';\nimport React, { Component, useState, useEffect, useRef } from 'react';\nimport store from \"../../Redux/store\";\nimport { connect } from \"react-redux\";\nimport { setImplicitGrantCredentials, setSettings } from \"../../Redux/actions/action\";\nimport styles from './ToolBar.module.css';\nimport CreateGame from '../CreateGame/CreateGame';\nimport JoinGame from '../JoinGame/JoinGame';\nimport flipBoard from '../Images/flip_board.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    app: state\n  };\n};\n\nconst mapDispatchToProps = state => {\n  return {\n    setImplicitGrantCredentials: props => store.dispatch(setImplicitGrantCredentials(props)),\n    setSettings: props => store.dispatch(setSettings(props)) //setQueues: props => store.dispatch(setQueues(props))\n    //  setUsers: props => store.dispatch(setUsers(props))\n\n  };\n};\n\nclass ToolBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: \"CREATE\"\n    }; // this.resize = this.resize.bind(this);\n\n    this.handleBoardFlip = this.handleBoardFlip.bind(this);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.ToolBar,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.FlipBoardButton,\n        onClick: this.handleBoardFlip,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: flipBoard,\n          className: styles.FlipBoardImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleBoardFlip(event) {\n    if (this.props.app.flippedState === -1) {\n      let payload = {\n        flippedState: 1\n      };\n      this.props.setSettings(payload);\n    } else {\n      let payload = {\n        flippedState: -1\n      };\n      this.props.setSettings(payload);\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToolBar);","map":{"version":3,"sources":["C:/Users/Jack.JACKLAPTOP/Documents/Long Chess/React Version/src/Components/ToolBar/ToolBar.js"],"names":["Redirect","React","Component","useState","useEffect","useRef","store","connect","setImplicitGrantCredentials","setSettings","styles","CreateGame","JoinGame","flipBoard","mapStateToProps","state","app","mapDispatchToProps","props","dispatch","ToolBar","constructor","page","handleBoardFlip","bind","componentDidMount","render","FlipBoardButton","FlipBoardImage","event","flippedState","payload"],"mappings":";AAAA;AACA;AACA,SAASA,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,EAAgDC,MAAhD,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,2BAAT,EAAsCC,WAAtC,QAAyD,4BAAzD;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAOC,SAAP,MAAsB,0BAAtB;;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,GAAG,EAAED;AADF,GAAP;AAGH,CAJD;;AAMA,MAAME,kBAAkB,GAAGF,KAAK,IAAI;AAChC,SAAO;AACHP,IAAAA,2BAA2B,EAAEU,KAAK,IAAIZ,KAAK,CAACa,QAAN,CAAeX,2BAA2B,CAACU,KAAD,CAA1C,CADnC;AAEHT,IAAAA,WAAW,EAAGS,KAAK,IAAIZ,KAAK,CAACa,QAAN,CAAeV,WAAW,CAACS,KAAD,CAA1B,CAFpB,CAGH;AACA;;AAJG,GAAP;AAMH,CAPD;;AASA,MAAME,OAAN,SAAsBlB,SAAtB,CAAgC;AAC5BmB,EAAAA,WAAW,CAACH,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKH,KAAL,GAAa;AACTO,MAAAA,IAAI,EAAE;AADG,KAAb,CAHe,CAMf;;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG,CACnB;;AAEDC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,SAAS,EAAEhB,MAAM,CAACU,OAAvB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAEV,MAAM,CAACiB,eAAvB;AAAwC,QAAA,OAAO,EAAE,KAAKJ,eAAtD;AAAA,+BACI;AAAK,UAAA,GAAG,EAAEV,SAAV;AAAqB,UAAA,SAAS,EAAEH,MAAM,CAACkB;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAEDL,EAAAA,eAAe,CAACM,KAAD,EAAO;AAClB,QAAG,KAAKX,KAAL,CAAWF,GAAX,CAAec,YAAf,KAAgC,CAAC,CAApC,EAAsC;AAClC,UAAIC,OAAO,GAAE;AACTD,QAAAA,YAAY,EAAG;AADN,OAAb;AAGA,WAAKZ,KAAL,CAAWT,WAAX,CAAuBsB,OAAvB;AACH,KALD,MAMI;AACA,UAAIA,OAAO,GAAE;AACTD,QAAAA,YAAY,EAAG,CAAC;AADP,OAAb;AAGA,WAAKZ,KAAL,CAAWT,WAAX,CAAuBsB,OAAvB;AACH;AACJ;;AAtC2B;;AA0ChC,eAAexB,OAAO,CAACO,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CG,OAA7C,CAAf","sourcesContent":["//import logo from './logo.svg';\r\n//import './App.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport React, { Component, useState, useEffect, useRef } from 'react';\r\nimport store from \"../../Redux/store\";\r\nimport { connect } from \"react-redux\";\r\nimport { setImplicitGrantCredentials, setSettings } from \"../../Redux/actions/action\";\r\n\r\n\r\nimport styles from './ToolBar.module.css'\r\n\r\nimport CreateGame from '../CreateGame/CreateGame';\r\nimport JoinGame from '../JoinGame/JoinGame';\r\n\r\nimport flipBoard from '../Images/flip_board.png'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        app: state,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = state => {\r\n    return {\r\n        setImplicitGrantCredentials: props => store.dispatch(setImplicitGrantCredentials(props)),\r\n        setSettings : props => store.dispatch(setSettings(props))\r\n        //setQueues: props => store.dispatch(setQueues(props))\r\n        //  setUsers: props => store.dispatch(setUsers(props))\r\n    };\r\n};\r\n\r\nclass ToolBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            page: \"CREATE\"\r\n        }\r\n        // this.resize = this.resize.bind(this);\r\n        this.handleBoardFlip = this.handleBoardFlip.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={styles.ToolBar}>\r\n                <div className={styles.FlipBoardButton} onClick={this.handleBoardFlip}>\r\n                    <img src={flipBoard} className={styles.FlipBoardImage}></img>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleBoardFlip(event){\r\n        if(this.props.app.flippedState === -1){\r\n            let payload ={ \r\n                flippedState : 1\r\n            }\r\n            this.props.setSettings(payload);\r\n        }\r\n        else{\r\n            let payload ={ \r\n                flippedState : -1\r\n            }\r\n            this.props.setSettings(payload);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToolBar);"]},"metadata":{},"sourceType":"module"}