{"ast":null,"code":"import { SET_IMPLICIT_GRANT_CREDENTIALS, SET_BOARD, SET_SELECTED, SET_AUTHENTICATION_STATUS, SET_PAGE, SET_AUTHENTICATION_CREDENTIALS, JOIN_GAME } from \"../constants/action-types\";\nimport * as moment from 'moment';\n\nfunction appReducer(state, action) {\n  //tell redux how to deal with data in each action case. one for each action.\n  let newstate = null;\n\n  if (action.type === SET_IMPLICIT_GRANT_CREDENTIALS) {\n    //after getting access token \n    newstate = { ...state,\n      loggedIn: true,\n      loginErrorMessage: null,\n      access_token: action.payload.access_token,\n      implicitGrantExpiry: moment().add(86398, 'seconds')\n    };\n  } else if (action.type === SET_BOARD) {\n    newstate = { ...state,\n      ...action.payload\n    };\n  } else if (action.type === SET_SELECTED) {\n    let highlightedSquares = [];\n\n    try {\n      if (state.board[action.payload.selected.x][action.payload.selected.y].type !== null) {\n        console.log(\"this is a piece\");\n        highlightedSquares = getMoves(state.board, action.payload.selected);\n      }\n    } catch {}\n\n    newstate = { ...state,\n      selectedSquare: action.payload.selected,\n      highlightedSquares: highlightedSquares\n    };\n  } else if (action.type === SET_AUTHENTICATION_STATUS) {\n    newstate = { ...state,\n      ...action.payload\n    };\n  } else if (action.type === SET_PAGE) {\n    newstate = { ...state,\n      ...action.payload\n    };\n  } else if (action.type === SET_AUTHENTICATION_CREDENTIALS) {\n    newstate = { ...state,\n      loggedIn: true,\n      page: \"MAIN\",\n      token: action.payload.token,\n      username: action.payload.username\n    };\n  } else if (action.type === JOIN_GAME) {\n    newstate = { ...state,\n      gameId: action.payload.gameId,\n      playerId: action.payload.playerId,\n      updater: action.payload.updater\n    };\n  } else {\n    newstate = { ...state\n    };\n  }\n\n  return newstate;\n}\n\nexport default appReducer;","map":{"version":3,"sources":["C:/Users/Jack.JACKLAPTOP/Documents/Long Chess/React Version/src/Redux/reducers/reducer.js"],"names":["SET_IMPLICIT_GRANT_CREDENTIALS","SET_BOARD","SET_SELECTED","SET_AUTHENTICATION_STATUS","SET_PAGE","SET_AUTHENTICATION_CREDENTIALS","JOIN_GAME","moment","appReducer","state","action","newstate","type","loggedIn","loginErrorMessage","access_token","payload","implicitGrantExpiry","add","highlightedSquares","board","selected","x","y","console","log","getMoves","selectedSquare","page","token","username","gameId","playerId","updater"],"mappings":"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","sourcesContent":["import {\r\n    SET_IMPLICIT_GRANT_CREDENTIALS,\r\n    SET_BOARD,\r\n    SET_SELECTED,\r\n    SET_AUTHENTICATION_STATUS,\r\n    SET_PAGE,\r\n    SET_AUTHENTICATION_CREDENTIALS,\r\n    JOIN_GAME\r\n} from \"../constants/action-types\";\r\nimport * as moment from 'moment';\r\n\r\n\r\n\r\nfunction appReducer(state, action) {\r\n    //tell redux how to deal with data in each action case. one for each action.\r\n    let newstate = null;\r\n    if (action.type === SET_IMPLICIT_GRANT_CREDENTIALS) { //after getting access token \r\n        newstate = {\r\n            ...state,\r\n            loggedIn: true,\r\n            loginErrorMessage: null,\r\n            access_token: action.payload.access_token,\r\n            implicitGrantExpiry: moment().add(86398, 'seconds'),\r\n        };\r\n    }\r\n    else if (action.type === SET_BOARD) {\r\n        newstate = {\r\n            ...state,\r\n            ...action.payload,\r\n        }\r\n    }\r\n    else if (action.type === SET_SELECTED) {\r\n        let highlightedSquares = [];\r\n        try{\r\n            if (state.board[action.payload.selected.x][action.payload.selected.y].type !== null) {\r\n                console.log(\"this is a piece\");\r\n                highlightedSquares = getMoves(state.board, action.payload.selected);\r\n            }\r\n        }\r\n        catch{\r\n\r\n        }\r\n        newstate = {\r\n            ...state,\r\n            selectedSquare: action.payload.selected,\r\n            highlightedSquares: highlightedSquares\r\n        }\r\n    }\r\n    else if(action.type === SET_AUTHENTICATION_STATUS){\r\n         newstate = {\r\n             ...state,\r\n             ...action.payload\r\n         }\r\n    }\r\n    else if(action.type === SET_PAGE){\r\n        newstate = {\r\n            ...state,\r\n            ...action.payload\r\n        }\r\n    }\r\n    else if(action.type === SET_AUTHENTICATION_CREDENTIALS){\r\n        newstate = {\r\n            ...state,\r\n            loggedIn : true,\r\n            page: \"MAIN\",\r\n            token: action.payload.token,\r\n            username: action.payload.username,\r\n        }\r\n    }\r\n    else if(action.type === JOIN_GAME){\r\n        newstate = {\r\n            ...state,\r\n            gameId : action.payload.gameId,\r\n            playerId: action.payload.playerId,\r\n            updater: action.payload.updater\r\n        }\r\n    }\r\n    else {\r\n        newstate = { ...state };\r\n    }\r\n\r\n    return newstate;\r\n}\r\n\r\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}