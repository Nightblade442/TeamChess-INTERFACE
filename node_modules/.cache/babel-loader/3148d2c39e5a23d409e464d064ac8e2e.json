{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jack.JACKLAPTOP\\\\Documents\\\\Long Chess\\\\React Version\\\\src\\\\Components\\\\CreateGame\\\\CreateGame.js\";\n//import logo from './logo.svg';\n//import './App.css';\nimport { Redirect } from 'react-router-dom';\nimport React, { Component, useState, useEffect, useRef } from 'react';\nimport store from \"../../Redux/store\";\nimport { connect } from \"react-redux\";\nimport { setImplicitGrantCredentials } from \"../../Redux/actions/action\";\nimport styles from './CreateGame.module.css';\nimport createGame from '../../API/createGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    app: state\n  };\n};\n\nconst mapDispatchToProps = state => {\n  return {\n    setImplicitGrantCredentials: props => store.dispatch(setImplicitGrantCredentials(props)) //setQueues: props => store.dispatch(setQueues(props))\n    //  setUsers: props => store.dispatch(setUsers(props))\n\n  };\n};\n\nclass CreateGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfBoards: 1\n    }; // this.resize = this.resize.bind(this);\n\n    this.handleBoardNumber = this.handleBoardNumber.bind(this);\n    this.handleCreateGame = this.handleCreateGame.bind(this);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.CreateGameContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Number of Boards: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        defaultValue: \"1\",\n        onChange: this.handleBoardNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"game ID\",\n        value: \"fdlakjhdflkjhl\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.CreateGameButton,\n        onClick: this.handleCreateGame,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleBoardNumber(event) {\n    console.log(event.target.value);\n    this.setState({\n      numberOfBoards: event.target.value\n    });\n  }\n\n  handleCreateGame(event) {\n    console.log(\"Creating Game\");\n    let params = {\n      username: this.props.app.username,\n      token: this.props.app.token,\n      numberOfBoards: this.state.numberOfBoards\n    };\n    createGame(params).then(response => {\n      console.log(response);\n      this.setState({ ...this.state,\n        gameId: response.gameId\n      });\n    }).catch(error => {});\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateGame);","map":{"version":3,"sources":["C:/Users/Jack.JACKLAPTOP/Documents/Long Chess/React Version/src/Components/CreateGame/CreateGame.js"],"names":["Redirect","React","Component","useState","useEffect","useRef","store","connect","setImplicitGrantCredentials","styles","createGame","mapStateToProps","state","app","mapDispatchToProps","props","dispatch","CreateGame","constructor","numberOfBoards","handleBoardNumber","bind","handleCreateGame","componentDidMount","render","CreateGameContainer","CreateGameButton","event","console","log","target","value","setState","params","username","token","then","response","gameId","catch","error"],"mappings":"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","sourcesContent":["//import logo from './logo.svg';\r\n//import './App.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport React, { Component, useState, useEffect, useRef } from 'react';\r\nimport store from \"../../Redux/store\";\r\nimport { connect } from \"react-redux\";\r\nimport { setImplicitGrantCredentials } from \"../../Redux/actions/action\";\r\n\r\n\r\nimport styles from './CreateGame.module.css'\r\n\r\nimport createGame from '../../API/createGame'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        app: state,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = state => {\r\n    return {\r\n        setImplicitGrantCredentials: props => store.dispatch(setImplicitGrantCredentials(props)),\r\n        //setQueues: props => store.dispatch(setQueues(props))\r\n        //  setUsers: props => store.dispatch(setUsers(props))\r\n    };\r\n};\r\n\r\nclass CreateGame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            numberOfBoards: 1,\r\n        }\r\n        // this.resize = this.resize.bind(this);\r\n        this.handleBoardNumber = this.handleBoardNumber.bind(this);\r\n        this.handleCreateGame = this.handleCreateGame.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.CreateGameContainer}>\r\n                <h4>Number of Boards: </h4>\r\n                <input type=\"number\" defaultValue=\"1\" onChange={this.handleBoardNumber}></input>\r\n                <input type=\"text\"placeholder=\"game ID\" value=\"fdlakjhdflkjhl\" readOnly></input>\r\n                <button className={styles.CreateGameButton} onClick={this.handleCreateGame}>Create</button>\r\n                </div>\r\n        )\r\n    }\r\n\r\n    handleBoardNumber(event) {\r\n        console.log(event.target.value);\r\n        this.setState({\r\n            numberOfBoards: event.target.value\r\n        })\r\n    }\r\n\r\n    handleCreateGame(event){\r\n        console.log(\"Creating Game\");\r\n        let params = {\r\n            username: this.props.app.username,\r\n            token: this.props.app.token,\r\n            numberOfBoards: this.state.numberOfBoards\r\n        }\r\n        createGame(params)\r\n        .then(response => {\r\n            console.log(response);\r\n            this.setState({\r\n                ...this.state,\r\n                gameId : response.gameId,\r\n            })\r\n        })\r\n        .catch(error => {\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateGame);\r\n"]},"metadata":{},"sourceType":"module"}