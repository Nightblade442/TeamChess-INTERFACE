{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jack.JACKLAPTOP\\\\Documents\\\\Long Chess\\\\React Version\\\\src\\\\Components\\\\Piece\\\\Piece.js\";\nimport { Redirect } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport store from \"../../Redux/store\";\nimport { connect } from \"react-redux\";\nimport { setImplicitGrantCredentials, setBoard, setSelected } from \"../../Redux/actions/action\";\nimport sendMove from \"../../API/sendMove\";\nimport styles from './Piece.module.css';\nimport pawn_w from '../Images/pawn_w.png';\nimport pawn_b from '../Images/pawn_b.png';\nimport rook_w from '../Images/rook_w.png';\nimport rook_b from '../Images/rook_b.png';\nimport bishop_w from '../Images/bishop_w.png';\nimport knight_w from '../Images/knight_w.png';\nimport queen_w from '../Images/queen_w.png';\nimport king_w from '../Images/king_w.png';\nimport { SET_IMPLICIT_GRANT_CREDENTIALS } from '../../Redux/constants/action-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = {\n  pawn_w: pawn_w,\n  pawn_b: pawn_b,\n  rook_w: rook_w,\n  rook_b: rook_b,\n  bishop_w: bishop_w,\n  knight_w: knight_w,\n  queen_w: queen_w,\n  king_w: king_w\n};\n\nconst mapStateToProps = state => {\n  return {\n    app: state\n  };\n};\n\nconst mapDispatchToProps = state => {\n  return {\n    setImplicitGrantCredentials: props => store.dispatch(setImplicitGrantCredentials(props)),\n    setBoard: props => store.dispatch(setBoard(props)),\n    setSelected: props => store.dispatch(setSelected(props)) //setQueues: props => store.dispatch(setQueues(props))\n    //  setUsers: props => store.dispatch(setUsers(props))\n\n  };\n};\n\nclass Piece extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    let html = null;\n\n    if (this.props.params !== undefined) {\n      let image = null;\n      let style = {\n        width: this.props.params.squareSize + 'px',\n        height: this.props.params.squareSize + 'px'\n      };\n\n      if (this.props.params.type !== null) {\n        image = /*#__PURE__*/_jsxDEV(\"img\", {\n          src: images[this.props.params.type],\n          width: this.props.params.squareSize,\n          width: this.props.params.squareSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this);\n      }\n\n      if (this.props.params.colour === \"WHITE\") {\n        html = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Square_WHITE,\n          style: style,\n          onClick: this.handleClick,\n          children: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this);\n      } else {\n        html = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Square_BLACK,\n          style: style,\n          onClick: this.handleClick,\n          children: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this);\n      }\n\n      if (this.props.app.highlightedSquares.length !== 0) {\n        this.props.app.highlightedSquares.forEach(square => {\n          if (square.x === this.props.params.location.x && square.y === this.props.params.location.y) {\n            if (this.props.params.colour === \"WHITE\") {\n              console.log(\"here in colours for highlighted\");\n              html = /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.Square_HIGHLIGHTED_WHITE,\n                style: style,\n                onClick: this.handleClick,\n                children: image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this);\n            } else {\n              html = /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.Square_HIGHLIGHTED_BLACK,\n                style: style,\n                onClick: this.handleClick,\n                children: image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this);\n            }\n          }\n        });\n      }\n\n      if (this.props.app.selectedSquare.x === this.props.params.location.x && this.props.app.selectedSquare.y === this.props.params.location.y) {\n        if (this.props.params.colour === \"WHITE\") {\n          html = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.Square_SELECTED_WHITE,\n            style: style,\n            onClick: this.handleClick,\n            children: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this);\n        } else {\n          html = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.Square_SELECTED_BLACK,\n            style: style,\n            onClick: this.handleClick,\n            children: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this);\n        }\n      }\n    } else {\n      html = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Square_BLACK\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this);\n    }\n\n    return html;\n  }\n\n  handleClick() {\n    if (this.props.app.selectedSquare.x === this.props.params.location.x && this.props.app.selectedSquare.y === this.props.params.location.y) {\n      console.log(\"This piece is seleceted\");\n      let location = {\n        x: null,\n        y: null\n      };\n      this.props.setSelected({\n        selected: location\n      });\n    } else {\n      let isHighlighted = false;\n      this.props.app.highlightedSquares.forEach(square => {\n        if (square.x === this.props.params.location.x && square.y === this.props.params.location.y) {\n          //have to implement move piece here code.\n          let board = this.props.app.board;\n          let pieceLocation = this.props.app.selectedSquare;\n          let piece = board[pieceLocation.x][pieceLocation.y];\n          piece.location = square;\n          board[pieceLocation.x][pieceLocation.y] = {\n            type: null,\n            location: pieceLocation\n          };\n          board[square.x][square.y] = piece;\n          isHighlighted = true;\n          let params = { ...this.props.app\n          };\n          sendMove(params).then(response => {\n            console.log(response);\n          }).catch(error => {});\n          this.props.setBoard({\n            highlightedSquares: [],\n            selectedSquare: {\n              x: null,\n              y: null\n            },\n            board: board\n          });\n        }\n      });\n\n      if (!isHighlighted) {\n        this.props.setSelected({\n          selected: this.props.params.location\n        });\n\n        if (this.props.params.type !== null) {\n          console.log(\"This is a piece...\");\n        } else {\n          console.log(\"This is not a piece\");\n        }\n      }\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Piece);","map":{"version":3,"sources":["C:/Users/Jack.JACKLAPTOP/Documents/Long Chess/React Version/src/Components/Piece/Piece.js"],"names":["Redirect","React","Component","store","connect","setImplicitGrantCredentials","setBoard","setSelected","sendMove","styles","pawn_w","pawn_b","rook_w","rook_b","bishop_w","knight_w","queen_w","king_w","SET_IMPLICIT_GRANT_CREDENTIALS","images","mapStateToProps","state","app","mapDispatchToProps","props","dispatch","Piece","constructor","handleClick","bind","componentDidMount","render","html","params","undefined","image","style","width","squareSize","height","type","colour","Square_WHITE","Square_BLACK","highlightedSquares","length","forEach","square","x","location","y","console","log","Square_HIGHLIGHTED_WHITE","Square_HIGHLIGHTED_BLACK","selectedSquare","Square_SELECTED_WHITE","Square_SELECTED_BLACK","selected","isHighlighted","board","pieceLocation","piece","then","response","catch","error"],"mappings":"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","sourcesContent":["\r\nimport { Redirect } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport store from \"../../Redux/store\";\r\nimport { connect } from \"react-redux\";\r\nimport { setImplicitGrantCredentials, setBoard, setSelected } from \"../../Redux/actions/action\";\r\n\r\nimport sendMove from \"../../API/sendMove\";\r\n\r\nimport styles from './Piece.module.css';\r\n\r\nimport pawn_w from '../Images/pawn_w.png';\r\nimport pawn_b from '../Images/pawn_b.png';\r\nimport rook_w from '../Images/rook_w.png';\r\nimport rook_b from '../Images/rook_b.png';\r\nimport bishop_w from '../Images/bishop_w.png';\r\nimport knight_w from '../Images/knight_w.png';\r\nimport queen_w from '../Images/queen_w.png';\r\nimport king_w from '../Images/king_w.png';\r\nimport { SET_IMPLICIT_GRANT_CREDENTIALS } from '../../Redux/constants/action-types';\r\n\r\nconst images = {\r\n    pawn_w: pawn_w,\r\n    pawn_b: pawn_b,\r\n    rook_w: rook_w,\r\n    rook_b: rook_b,\r\n    bishop_w: bishop_w,\r\n    knight_w: knight_w,\r\n    queen_w: queen_w,\r\n    king_w: king_w\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        app: state,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = state => {\r\n    return {\r\n        setImplicitGrantCredentials: props => store.dispatch(setImplicitGrantCredentials(props)),\r\n        setBoard: props => store.dispatch(setBoard(props)),\r\n        setSelected: props => store.dispatch(setSelected(props)),\r\n        //setQueues: props => store.dispatch(setQueues(props))\r\n        //  setUsers: props => store.dispatch(setUsers(props))\r\n    };\r\n};\r\n\r\nclass Piece extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        let html = null;\r\n        if (this.props.params !== undefined) {\r\n            let image = null;\r\n            let style = {\r\n                width: this.props.params.squareSize + 'px',\r\n                height: this.props.params.squareSize + 'px'\r\n            }\r\n            if (this.props.params.type !== null) {\r\n                image = (\r\n                    <img src={images[this.props.params.type]} width={this.props.params.squareSize} width={this.props.params.squareSize}></img>\r\n                )\r\n            }\r\n            if (this.props.params.colour === \"WHITE\") {\r\n                html = (\r\n                    <div className={styles.Square_WHITE} style={style} onClick={this.handleClick}>\r\n                        {image}\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                html = (\r\n                    <div className={styles.Square_BLACK} style={style} onClick={this.handleClick}>\r\n                        {image}\r\n                    </div>\r\n                )\r\n            }\r\n            if (this.props.app.highlightedSquares.length !== 0) {\r\n                this.props.app.highlightedSquares.forEach(square => {\r\n                    if ((square.x === this.props.params.location.x) && (square.y === this.props.params.location.y)) {\r\n                        if (this.props.params.colour === \"WHITE\") {\r\n                            console.log(\"here in colours for highlighted\")\r\n                            html = (\r\n                                <div className={styles.Square_HIGHLIGHTED_WHITE} style={style} onClick={this.handleClick}>\r\n                                    {image}\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            html = (\r\n                                <div className={styles.Square_HIGHLIGHTED_BLACK} style={style} onClick={this.handleClick}>\r\n                                    {image}\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    }\r\n                })\r\n            }\r\n\r\n            if ((this.props.app.selectedSquare.x === this.props.params.location.x) && (this.props.app.selectedSquare.y === this.props.params.location.y)) {\r\n                if (this.props.params.colour === \"WHITE\") {\r\n                    html = (\r\n                        <div className={styles.Square_SELECTED_WHITE} style={style} onClick={this.handleClick}>\r\n                            {image}\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    html = (\r\n                        <div className={styles.Square_SELECTED_BLACK} style={style} onClick={this.handleClick}>\r\n                            {image}\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            html = (\r\n                <div className={styles.Square_BLACK}>\r\n\r\n                </div>\r\n            )\r\n        }\r\n        return html;\r\n    }\r\n\r\n    handleClick() {\r\n        if ((this.props.app.selectedSquare.x === this.props.params.location.x) && (this.props.app.selectedSquare.y === this.props.params.location.y)) {\r\n            console.log(\"This piece is seleceted\");\r\n            let location = {\r\n                x: null,\r\n                y: null\r\n            }\r\n            this.props.setSelected({ selected: location });\r\n        } else {\r\n            let isHighlighted = false;\r\n            this.props.app.highlightedSquares.forEach(square => {\r\n                if ((square.x === this.props.params.location.x) && (square.y === this.props.params.location.y)) {\r\n                    //have to implement move piece here code.\r\n                    let board = this.props.app.board;\r\n                    let pieceLocation = this.props.app.selectedSquare;\r\n                    let piece = board[pieceLocation.x][pieceLocation.y];\r\n                    piece.location = square;\r\n                    board[pieceLocation.x][pieceLocation.y] = {\r\n                        type: null,\r\n                        location: pieceLocation\r\n                    }\r\n                    board[square.x][square.y] = piece;\r\n                    isHighlighted = true;\r\n\r\n                    let params = {\r\n                        ...this.props.app\r\n                    }\r\n                    sendMove(params)\r\n                    .then(response => {\r\n                        console.log(response);\r\n                    })\r\n                    .catch(error => {\r\n\r\n                    })\r\n\r\n                    this.props.setBoard({\r\n                        highlightedSquares: [],\r\n                        selectedSquare: {\r\n                            x: null,\r\n                            y: null\r\n                        },\r\n                        board: board,\r\n                    });\r\n                }\r\n            })\r\n            if (!isHighlighted) {\r\n                this.props.setSelected({ selected: this.props.params.location })\r\n                if (this.props.params.type !== null) {\r\n                    console.log(\"This is a piece...\");\r\n\r\n                }\r\n                else {\r\n                    console.log(\"This is not a piece\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Piece);\r\n\r\n"]},"metadata":{},"sourceType":"module"}